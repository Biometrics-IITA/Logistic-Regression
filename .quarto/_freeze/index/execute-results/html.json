{
  "hash": "ed681a3a43da5a63eea7c037df09eb54",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"<p style=\\\"color:black,text-align:center\\\">Logistic Regression </p>\"\nauthor: \n  - name: <font color=#ff6600><b>Biometrics Unit</b></font>\naffiliation: <font color=#ff6600><International Institute of Tropical Agriculture (IITA)><font color=#ff6600>\n---\n\n\n# [ **Introduction**]{style=\"color: #234F1E;\"}\n\nLogistic regression, also known as the logistic model or logit model, examines how multiple independent variables relate to a categorical dependent variable. It predicts the probability of an event happening by modeling data to fit a logistic curve.\n\nLogistic regression is a supervised machine learning algorithm that accomplishes binary classification tasks by predicting the probability of an outcome, event, or observation. The model delivers a binary or dichotomous outcome limited to two possible outcomes: yes/no, 0/1, or true/false.\n\nLogistic regression is a type of statistical model that is used to predict the probability of a certain event happening. It may be used to determine if an email is spam or not, as well as diagnose illnesses by determining whether certain symptoms are present or absent based on test results from patients. It works by taking input variables and transforming them into a probability value between 0 and 1, where 0 represents a low probability and 1 represents a high probability.\n\nFor example, a researcher wants to measure the poverty status of farmers in a certain locality using their annual income and decided to classify them as poor (1) and not poor (0) based on a certain threshold. Then logistic regression could be used to determine the factors influencing poverty among the farmers using predictor variables like gender, age, farm size, household size, years of farming experience, etc.\n\nThe reason it is named \"logistic\" is that an S-shaped curve (sigmoid function) is produced when the input variables are transformed using a mathematical function known as the logistic function.\n\n# [ **Advantages of Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nThe logistic regression analysis has several advantages in machine learning. These are highlighted below.\n\n<img src=\"images/advanlog.png\" alt=\"Advantages of Logistic Regression\" style=\"width:50%;\"/>\n\n[Source](https://www.spiceworks.com/tech/artificial-intelligence/articles/what-is-logistic-regression/)\n\n1.  It is easier to implement machine learning models: Logistic regression is computationally efficient compared to many other machine learning methods, making it easier to implement, interpret, and train.\n\n2.  Optimal for linearly separable data: Logistic regression is specifically designed for binary classification tasks, effectively categorizing data into two distinct groups when the data is linearly separable.\n\n3.  Provides valuable insights: Logistic regression coefficients indicate both the strength and direction of the relationship between predictor variables and the outcome.\n\n# [ **The Logistic Curve** ]{style=\"color: #234F1E;\"}\n\nLogistic regression is a technique used to model the relationship between a binary (dichotomous) response variable ( y ) and a numerical predictor variable ( x ). It fits a logistic curve, which is an S-shaped or sigmoid curve, to represent how ( y ) changes as ( x ) varies. This method is particularly useful when ( y ) represents binary outcomes coded as 0 (failure) or 1 (success), such as in cases of modeling population growth or other similar scenarios.\n\nLogistic regression fits α and β, the regression coefficients. The logistic or logit function is used to transform an ‘S’-shaped curve into an approximately straight line and to change the range of the proportion from \\[0 – 1\\] to \\[(-∞) - (+∞)\\]\n\n<img src=\"images/logcurve.png\" alt=\"Logistic Curve\" style=\"width:50%;\"/>\n\n[Source](https://images.spiceworks.com/wp-content/uploads/2022/04/11040521/46-4-e1715636469361.png)\n\n<b>\n\n<p style=\"text-align: center; color: black;\">\n\nlogit(y)= ln (odds)= ln ($\\frac{P}{1 - P}$ ) = $\\alpha$ + $\\beta$X\n\n</p>\n\n</b>\n\n# [ **Assumptions**]{style=\"color: #234F1E;\"}\n\n-   **B**inary Outcome: The dependent variable should be binary in nature, i.e. it should take on one of two possible vales coded as 0 and 1, \"success\" and \"failure\", \"yes\" and \"no\".\n\n-   **I**ndependence of Errors: This implies that the error for each observation in the dataset should not be related to the error for any other observation. If violations of independence are detected, this may indicate the need to consider a different model or to account for correlation or clustering in the data using other methods such as mixed effects model.\n\n-   **L**inearity of the Logit: This means that the relationship between the independent variables and the log-odds of the outcome is linear. This means that the effect of the independent variables on the log-odds of the outcome is constant across the range of the independent variables. Logistic regression can accommodate non-linear relationships between the independent and dependent variables by employing a non-linear log transformation of the linear regression framework.\n\n-   **Large Sample Size**: A relatively large sample size is required to detect meaningful effects and to ensure stability of estimates in Logistic regression. A small sample size can lead to overfitting, where the model captures noise rather than the underlying signal in the data, and underpowered statistical tests, which may fail to detect significant effects due to inadequate sample size.\n\n-   **Outliers**: The dataset is assumed to be free of extreme outliers and significant observations for the purposes of logistic regression. To deal with outliers, you can do any of the following:\n\n    1.  Replace the outliers with a mean or median value\n    2.  Eliminate the outliers\n    3.  Keep the outliers and maintain a record while reporting the regression results.\n\n-   **No Multicollinearity**: The assumption of no or low multicollinearity among independent variables is quite vital in logistic regression. When two or more explanatory variables have a high degree of correlation with one another, the regression model cannot obtain unique or independent information from them. This phenomenon is known as multicollinearity. A high enough degree of correlation between variables may make it difficult to fit and comprehend the model.\n\nThe acronym **BILLION** gives a useful way to remember the six conditions that makes up the Logistic Regression Model.\n\n<img src=\"images/assumlog.png\" width=\"50%\"/>\n\n[Source](https://images.spiceworks.com/wp-content/uploads/2022/04/11041034/50-e1715636496628.png)\n\n# [ **Comparison Between Linear Regression and Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nThe following are the comparison that exist between linear and logistic regression\n\n<img src=\"images/loglin.png\"/>\n\nLinear regression is not suitable for binary dependent variables due to several reasons. Firstly, the distribution of the binary variable ( Y ) is not normal; it follows a Bernoulli distribution rather than a Gaussian distribution assumed by linear regression. Secondly, using linear regression may lead to incomparable results because the scale and interpretation of the left-hand side (the binary outcome) and the right-hand side (predictors) of the model are fundamentally different when applied to a binary outcome.\n\nThe difference between logistic regression model and a linear regression model is that the outcome variable in logistic regression is binary and dichotomous.\n\n# [ **Models of Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nThere are basically 3 types of logistic regression model, these are:\n\n1.  Binary Logistic Regression\n2.  Multinomial Logistic Regression\n3.  Ordinal Logistic Regression\n\n# [ **Binary Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nBinary logistic regression belongs to the broader category of statistical models known as generalized linear models. What sets binary logistic regression apart from other models within this category is its specific application to dependent variables that have two distinct levels.\n\nAs seen above, binary logistic regression is suitable when the dependent variable has two categories, and the independent variables are either continuous or categorical. Binary logistic regression is used when we are trying to predict a dependent variable with only two outcomes (dichotomous variable), for example, yes and No.\n\nLogistic regression has the coefficients of parameters like the linear regression and in the addition has the odd ratio which is the exponential of the coefficient.\n\nOdd ratio is $\\varepsilon^{\\beta}$\n\nThe equation for binary logistic regression expression is as shown below:\n\n$log\\frac{p}{1 - p}$ = Y= $\\beta_0$ + $\\beta_1X_1$ + $\\beta_2X_2$ + ... + $\\beta_kX_k$\n\nWhere $log\\frac{p}{1 - p}$ is the odd ratio (Dependent variables)\n\n$\\beta_0$ = Constant or intercept term in the equation.\n\n$\\beta_1$,...$\\beta_k$ are the logistic regression coefficients (Coefficient of variable )\n\n$X_1$...$X_k$ = Independent variables\n\n$\\varepsilon$ = Error Term\n\n## [ Example ]{style=\"color: #002D62;\"}\n\nA sugar cane farmer wants to visually select seedlings to plant in another location. The decision is to select (1) or reject a seedling based on the number of stalks, height (m), stalk diameter, and seedling cane yield (kg). In this case, four of the explanatory variables are quantitative, one is qualitative and the response variable is dichotomous, therefore the logistic regression can the used for the analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|include=FALSE\n#|warning =FALSE\n#|message=TRUE\n\n# load libraries\nlibrary(readxl)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|cache=TRUE\n# read in data\ndat <- read_excel(\"Sugar cane.xlsx\", sheet = \"Sugar cane\")\nhead(dat) # print the first six rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  Choice Stalks Height Diameter  Cane Variety\n   <dbl>  <dbl>  <dbl>    <dbl> <dbl>   <dbl>\n1      1     23   2.37     1.7  12.4        2\n2      0     11   2.25     1.68  5.49       3\n3      0      9   2.5      1.93  6.59       2\n4      1     25   2.4      2.12 21.2        2\n5      1     20   2.5      1.7  11.4        1\n6      0     12   1.9      1.51  4.08       1\n```\n\n\n:::\n\n```{.r .cell-code}\ndat <- dat %>% mutate(across(c(Choice,Variety), factor)) #convert \n```\n:::\n\n\n**The Logistic Model**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|warning=FALSE\n#|eval=TRUE\n\nmodel_log <- glm(Choice ~ Cane + Diameter + Height, \n             data = dat, family = binomial)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(model_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Choice ~ Cane + Diameter + Height, family = binomial, \n    data = dat)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)  \n(Intercept)  -5.2139    15.5265  -0.336   0.7370  \nCane          2.3901     1.1340   2.108   0.0351 *\nDiameter     -6.8924     4.9139  -1.403   0.1607  \nHeight        0.8381     6.6179   0.127   0.8992  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 40.381  on 29  degrees of freedom\nResidual deviance: 11.797  on 26  degrees of freedom\nAIC: 19.797\n\nNumber of Fisher Scoring iterations: 8\n```\n\n\n:::\n:::\n\n\n**Formula:** The model predicts Choice (a binary outcome) based on three predictors: Cane, Diameter, and Height.\n\n**Family:** The model uses a binomial distribution, suitable for binary response variables. **Coefficients Intercept:** The estimated intercept is -5.2139. This represents the log-odds of the outcome (Choice = 1) when all predictors are at their reference level (or zero). However, the high standard error (15.5265) indicates that this estimate is not statistically significant (p-value = 0.7370), meaning it is not reliable.\n\n**Cane:** The coefficient for Cane is 2.3901, with a p-value of 0.0351, which is statistically significant (denoted by \\*). This suggests that for each one-unit increase in Cane, the log-odds of choosing the outcome (Choice = 1) increases by approximately 2.39. In practical terms, this implies that Cane has a positive influence on the likelihood of the event happening.\n\n**Diameter:** The coefficient for Diameter is -6.8924, with a p-value of 0.1607, indicating it is not statistically significant. A negative coefficient suggests that as Diameter increases, the log-odds of the outcome decrease, but we cannot conclude that this effect is meaningful due to the p-value being above the common threshold of 0.05.\n\n**Height:** The coefficient for Height is 0.8381, but like Diameter, it has a very high p-value (0.8992), implying it is not statistically significant. Therefore, Height does not appear to have a meaningful impact on the outcome.\n\n**Model Fit Information**\n\n**Null Deviance:** 40.381, which measures the difference in the likelihood of the model with only an intercept compared to the saturated model.\n\n**Residual Deviance:** 11.797, which is considerably lower than the null deviance, suggesting that the predictors explain a significant amount of variance in the response variable. The degrees of freedom for residuals (26) suggests there are enough observations after accounting for the parameters estimated.\n\n**AIC (Akaike Information Criterion):** 19.797, a measure used for model comparison, lower values indicate a better fit when comparing multiple models.\n\nAmong the predictors, only cane seems to have a statistically significant impact on the likelihood of the choice of seedling selected or not selected. In contrast, Diameter and Height do not appear to significantly affect the choice of seedling selected or not selected. The model does fit the data better than a null model, as indicated by the reduction in deviance, but the overall significance and impact of some predictors are weak.\n\n### Variable Importance\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval=TRUE\n\ncaret::varImp(model_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           Overall\nCane     2.1076503\nDiameter 1.4026300\nHeight   0.1266381\n```\n\n\n:::\n\n```{.r .cell-code}\nexp(coef(model_log))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)         Cane     Diameter       Height \n 0.005440294 10.914966068  0.001015469  2.311918797 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|warning=FALSE\n\ncbind(\"Odds ratio\" = round(exp(coef(model_log)),4), \n      \"P-value\" = round(coef(summary(model_log)),4)[,4], \n      round(exp(confint.default(model_log, level = 0.95)),4))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Odds ratio P-value  2.5 %       97.5 %\n(Intercept)     0.0054  0.7370 0.0000 8.949811e+10\nCane           10.9150  0.0351 1.1823 1.007648e+02\nDiameter        0.0010  0.1607 0.0000 1.546670e+01\nHeight          2.3119  0.8992 0.0000 9.934237e+05\n```\n\n\n:::\n:::\n\n\nCane has an odd ratio of 10.9150. This implies that for each unit increase in cane, the odds of the outcome are approximately 10.92 times higher, with a P-value of 0.0351 indicates it is statistically significant (evidence to suggest Cane has a meaningful effect on the outcome).\n\nDiameter has an odd ratio of 0.0010. This indicate that for each unit increase in diameter, the odds of the choice of seedling made decrease significantly (close to zero).With a P-value of 0.1607 shows it is not statistically significant.\n\nHeight has an odd ratio of 2.3119, implying that for each unit increase in height, the odds of the choice of seedling made are increased by about 2.31 times. With a p-value(0.8992). It shows it is not statistically significant.\n\nHence, we can say that cane is a significant predictor of the choice of seedlings.\n\n# [ **Multinomial Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nMultinomial logistic regression (often just called \"multinomial regression\") is used to predict a nominal dependent variable given one or more independent variables. Multinomial logistic regression is used when the dependent variable has more than two categories.\n\nThe equation for multinomial logistic regression is as shown below:\n\nLet K be the number of possible outcomes.\n\nLet P(Y=k\\|X) be the probability of outcome k given predictors X.\n\nLet $\\beta_{kj}$ be the coefficient for predictor j in predicting outcome k\n\nThen, the probability of outcome k is given by:\n\n$$P(Y=k|X) = \\frac{\\exp(\\beta_{ko} + beta_{k1*X1} + ... + (\\beta_{kp*Xp})}{\\sum(exp(β_{j0} + β_{j1*X1} + ... + β_{jp*Xp}))}$$\n\n$β_{ko}$ is the intercept for outcome k.\n\nThe summation in the denominator is over all possible outcomes j.\n\n**Interpretation**\n\nThe formula calculates the probability of each possible outcome given the values of the predictor variables.\n\nThe coefficients (β values) represent the impact of the predictors on the log-odds of each outcome compared to a reference category.\n\nY= $\\beta_0$ + $\\beta_1X_1$ + $\\beta_2X_2$ + ... + $\\beta_kX_k$\n\nWhere Y = Dependent variables (Odd ratio)\n\n$\\beta_0$ = Constant\n\n$\\beta_1$ = Coefficient of variable\n\n$X_1$ = Independent variables\n\nE = Error Term\n\n## [ Example ]{style=\"color: #002D62;\"}\n\nTo predict the species of new flowers using a multinomial logistic regression model fitted on the iris dataset.\n\nThe VGAM (Vector Generalized Linear and Additive Models) package in R Programming Language provides a suite of functions for fitting a variety of regression models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|message=FALSE\n#|warning = FALSE\n#|cache = TRUE\n#|include = FALSE\n\nlibrary(VGAM) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: stats4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: splines\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'VGAM'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:caret':\n\n    predictors\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load and prepare the data \ndata(iris) \n  \n# Convert the species variable to a factor \niris$Species <- as.factor(iris$Species) \n```\n:::\n\n\nThis loads the library and the data, then converts the variable 'species' from character to a factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|warning=FALSE\n#|message=FALSE\n#|cache = TRUE\n#|include = FALSE\n\n# Fit a multinomial logistic regression model \nsuppressWarnings({\n  fit <- vglm(Species ~ Sepal.Length  \n            + Sepal.Width \n            + Petal.Length \n            + Petal.Width, \n            data = iris, \n            family = multinomial) \n})\n  \n# Print the model summary \nsuppressWarnings({\n  summary(fit)\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nvglm(formula = Species ~ Sepal.Length + Sepal.Width + Petal.Length + \n    Petal.Width, family = multinomial, data = iris)\n\nCoefficients: \n                Estimate Std. Error z value Pr(>|z|)  \n(Intercept):1     35.490  22666.953      NA       NA  \n(Intercept):2     42.638     25.708   1.659   0.0972 .\nSepal.Length:1     9.495   6729.217      NA       NA  \nSepal.Length:2     2.465      2.394   1.030   0.3032  \nSepal.Width:1     12.300   3143.611      NA       NA  \nSepal.Width:2      6.681      4.480   1.491   0.1359  \nPetal.Length:1   -22.975   4799.227  -0.005   0.9962  \nPetal.Length:2    -9.429      4.737      NA       NA  \nPetal.Width:1    -33.843   7583.502      NA       NA  \nPetal.Width:2    -18.286      9.743      NA       NA  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNames of linear predictors: log(mu[,1]/mu[,3]), log(mu[,2]/mu[,3])\n\nResidual deviance: 11.8985 on 290 degrees of freedom\n\nLog-likelihood: -5.9493 on 290 degrees of freedom\n\nNumber of Fisher scoring iterations: 21 \n\nWarning: Hauck-Donner effect detected in the following estimate(s):\n'(Intercept):1', 'Sepal.Length:1', 'Sepal.Width:1', 'Petal.Length:2', 'Petal.Width:1', 'Petal.Width:2'\n\n\nReference group is level  3  of the response\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nnet) \ndata(iris) \n  \n# Fit multinomial logistic regression model \nmodel <- multinom(Species ~ Petal.Length \n                  + Petal.Width \n                  + Sepal.Length \n                  + Sepal.Width, \n                  data = iris) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# weights:  18 (10 variable)\ninitial  value 164.791843 \niter  10 value 16.177348\niter  20 value 7.111438\niter  30 value 6.182999\niter  40 value 5.984028\niter  50 value 5.961278\niter  60 value 5.954900\niter  70 value 5.951851\niter  80 value 5.950343\niter  90 value 5.949904\niter 100 value 5.949867\nfinal  value 5.949867 \nstopped after 100 iterations\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict flower species for new data \nnew_flo <- data.frame(Petal.Length = 1.5, \n                       Petal.Width = 0.3,  \n                       Sepal.Length = 4.5,  \n                       Sepal.Width = 3.1) \npredict(model, newdata = new_flo, type = \"class\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] setosa\nLevels: setosa versicolor virginica\n```\n\n\n:::\n:::\n\n\nWe replace the values in new_flo with the actual measurements of the new flower you want to predict. This gives the predicted species of the new flower (e.g., \"setosa\", \"versicolor\", or \"virginica\").\n\n# [ **Ordinal Logistic Regression** ]{style=\"color: #234F1E;\"}\n\nOrdinal logistic regression or (ordinal regression) is used to model the relationship between **an ordinal response variable** and **one or more explanatory variables**. It is used to predict an **ordinal dependent variable** given **one or more independent variables**. The explanatory variables may be either continuous or categorical. We explore how one or more independent variables relate to the probability of an ordinal outcome being categorized into a specific or higher category using ordinal logistic regression.\n\nOrdinal Logistic Regression has assumptions which varies from the general logistic regression. They are listed below:\n\n**Assumptions**\n\n• The dependent variable is measured on an ordinal level.\n\n• One or more of the independent variables are either continuous, categorical or ordinal.\n\n• No multi-collinearity - i.e. when two or more independent variables are highly correlated with each other.\n\n• Proportional Odds - i.e. that each independent variable has an identical effect at each cumulative split of the ordinal dependent variable.\n\n**Ordinal Regression Model:**\n\n$$logit(P(Y \\geq j)) = \\beta_{jo} + \\beta_1x_1 + ...+ \\beta_px_p$$ Where:\n\n$P(Y \\geq j)$ = the cummulative probability of the response variable within category j\n\n$\\beta_{jo}$ = the threshold parameter for category j\n\n$\\beta_{1}$, $\\beta_2$, ..., $\\beta_{jp}$ are model coefficient associated with the predictor variables $X_1$, $X_2$, ..., $X_p$\n\n## [ Example ]{style=\"color: #002D62;\"}\n\n-   Let's use a hypothetical dataset where we predict customer satisfaction (ordinal variable: Low, Medium, High) based on factors like age, income, and product usage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(ordinal)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ordinal'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:VGAM':\n\n    dgumbel, dlgamma, pgumbel, plgamma, qgumbel, rgumbel, wine\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    slice\n```\n\n\n:::\n\n```{.r .cell-code}\n# Simulated data (replace with your actual data)\nset.seed(123)\ndata <- data.frame(\n  satisfaction = factor(sample(c(\"Low\", \"Medium\", \"High\"), 100, replace = TRUE), ordered = TRUE),\n  age = sample(25:65, 100, replace = TRUE),\n  income = sample(30000:100000, 100, replace = TRUE),\n  usage = sample(1:5, 100, replace = TRUE)\n)\n\n\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  satisfaction age income usage\n1         High  47  73927     2\n2         High  39  36600     4\n3         High  45  87700     5\n4       Medium  61  83517     2\n5         High  32  82352     3\n6       Medium  34  96153     3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(data)) #checking for missing values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t100 obs. of  4 variables:\n $ satisfaction: Ord.factor w/ 3 levels \"High\"<\"Low\"<\"Medium\": 1 1 1 3 1 3 3 3 1 2 ...\n $ age         : int  47 39 45 61 32 34 58 34 46 36 ...\n $ income      : int  73927 36600 87700 83517 82352 96153 77801 61516 96074 62262 ...\n $ usage       : int  2 4 5 2 3 3 1 3 2 3 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(data) # to check for proportional odds\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit the ordinal logistic regression model\n\nlibrary(ordinal)\nmodel <- clm(satisfaction ~ age + usage , data = data)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nformula: satisfaction ~ age + usage\ndata:    data\n\n link  threshold nobs logLik  AIC    niter max.grad cond.H \n logit flexible  100  -108.48 224.95 3(0)  5.13e-08 9.5e+04\n\nCoefficients:\n      age     usage \n-0.005358  0.206033 \n\nThreshold coefficients:\n  High|Low Low|Medium \n   -0.2749     1.1276 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Summary of the model\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nformula: satisfaction ~ age + usage\ndata:    data\n\n link  threshold nobs logLik  AIC    niter max.grad cond.H \n logit flexible  100  -108.48 224.95 3(0)  5.13e-08 9.5e+04\n\nCoefficients:\n       Estimate Std. Error z value Pr(>|z|)\nage   -0.005358   0.017546  -0.305    0.760\nusage  0.206033   0.129595   1.590    0.112\n\nThreshold coefficients:\n           Estimate Std. Error z value\nHigh|Low    -0.2749     0.8794  -0.313\nLow|Medium   1.1276     0.8869   1.271\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}